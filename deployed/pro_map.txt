com.yazo.application.Browser -> com.yazo.application.g:
    com.yazo.ui.UiContainer container -> a
    com.yazo.application.ui.CtlHeader ctl_header -> b
    com.yazo.application.ui.CtlExplorer ctl_explorer -> c
    com.yazo.application.ui.CtlMenu ctl_menu -> d
    com.yazo.application.ui.CtlAlert ctl_alert -> e
    com.yazo.contents.ContentManager contents -> f
    com.yazo.application.MainMIDlet midlet -> g
    javax.microedition.lcdui.Display display -> h
    com.yazo.application.SplashCanvas flash -> i
    java.lang.Boolean on_net_reading -> j
    void paint(javax.microedition.lcdui.Graphics) -> paint
    void keyReleased(int) -> keyReleased
    void after_content_loaded() -> a
    void gotoUrl(java.lang.String) -> a
    void command_callback(int,java.lang.Object) -> a
    void access$0(com.yazo.application.Browser) -> a
com.yazo.application.Browser$1 -> com.yazo.application.f:
    com.yazo.application.Browser this$0 -> a
    void run() -> run
com.yazo.application.Configuration -> com.yazo.application.b:
    java.lang.String CONTENT_PATH -> a
    java.lang.String CONTENT_HOME -> b
    java.lang.String APP_NAME -> c
    int SCREEN_HEIGHT -> d
    int SCREEN_WIDTH -> e
    javax.microedition.lcdui.Font DEFAULT_FONT -> f
    int FONT_HEIGHT -> g
    int LINE_HEIGHT -> h
    int HEADER_HEIGHT -> i
    int MENU_HEIGHT -> j
    int BROWSER_HEIGHT -> k
    void SetScreenSize(int,int) -> a
    void SetFontSize(int) -> a
com.yazo.application.MainMIDlet -> com.yazo.application.MainMIDlet:
    void destroyApp(boolean) -> destroyApp
    void pauseApp() -> pauseApp
    void startApp() -> startApp
    void postMsg(java.lang.String) -> a
    java.lang.String getTextFromRes(java.lang.String,boolean) -> a
com.yazo.application.MainMIDlet$1 -> com.yazo.application.c:
    void run() -> run
com.yazo.application.SearchUi -> com.yazo.application.d:
    javax.microedition.lcdui.TextBox textbox -> a
    javax.microedition.lcdui.Command cmd1 -> b
    javax.microedition.lcdui.Command cmd2 -> c
    com.yazo.application.Browser browser -> d
    javax.microedition.lcdui.Display display -> e
    java.lang.String result -> f
    void inputSearchText(com.yazo.application.Browser,javax.microedition.lcdui.Display) -> a
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
com.yazo.application.SplashCanvas -> com.yazo.application.a:
    int width -> a
    int height -> b
    java.lang.String error -> c
    java.util.Timer timer -> d
    int time -> e
    com.yazo.application.MainMIDlet midlet -> f
    javax.microedition.lcdui.Image splash_image -> g
    int c1 -> h
    int c2 -> i
    int c3 -> j
    int cw -> k
    int retry_times -> l
    void retryNetwork() -> a
    void paint(javax.microedition.lcdui.Graphics) -> paint
    void keyReleased(int) -> keyReleased
    void stopTimer() -> b
com.yazo.application.SplashCanvas$SpinnerTask -> com.yazo.application.e:
    com.yazo.application.SplashCanvas this$0 -> a
    void run() -> run
com.yazo.application.ui.CtlAlert -> ah:
    com.yazo.application.Browser command_manager$5641b1ee -> g
    javax.microedition.lcdui.Image img -> h
    javax.microedition.lcdui.Image img_shadow -> i
    javax.microedition.lcdui.Image img_bar -> j
    javax.microedition.lcdui.Graphics g -> k
    int color -> l
    int bgcolor -> m
    int bordercolor -> n
    int bar_posy -> o
    javax.microedition.lcdui.Font font -> p
    int state -> f
    java.lang.String confirmCommand -> q
    void setSize(int,int) -> a
    void setFont(javax.microedition.lcdui.Font) -> a
    void setCommandManager$2185161d(com.yazo.application.Browser) -> a
    void setBar(int,int,int) -> b
    void confirm(java.lang.String,java.lang.String) -> a
    void paint(javax.microedition.lcdui.Graphics) -> a
    void keyReleased(int) -> a
com.yazo.application.ui.CtlExplorer -> t:
    com.yazo.contents.PageContent content -> h
    int current_page -> f
    int total_pages -> g
    int cursor -> i
    int total_links -> j
    java.lang.String next_cmd -> k
    int color -> l
    int bgcolor -> m
    javax.microedition.lcdui.Image arrow1 -> n
    javax.microedition.lcdui.Image img -> o
    javax.microedition.lcdui.Graphics g -> p
    int line_height -> q
    int font_height -> r
    int line_space -> s
    int line_top_padding -> t
    int line_bottom_padding -> u
    com.yazo.application.Browser command_manager$5641b1ee -> v
    void setContent(com.yazo.contents.PageContent,int) -> a
    void setCommandManager$2185161d(com.yazo.application.Browser) -> a
    void paintImage() -> a
    void setCurrentPage(int) -> a
    void nextPage() -> b
    void prevPage() -> c
    void paint(javax.microedition.lcdui.Graphics) -> a
    int keyReleased(int) -> b
com.yazo.application.ui.CtlHeader -> as:
    javax.microedition.lcdui.Image img -> f
    javax.microedition.lcdui.Graphics g -> g
    int color -> h
    int bgcolor -> i
    int icolor -> j
    javax.microedition.lcdui.Font font -> k
    void setSize(int,int) -> a
    void setTitle(java.lang.String) -> a
    void paint(javax.microedition.lcdui.Graphics) -> a
com.yazo.application.ui.CtlMenu -> ax:
    javax.microedition.lcdui.Image img_bar -> g
    javax.microedition.lcdui.Image img_menu -> h
    javax.microedition.lcdui.Image img_shadow -> i
    javax.microedition.lcdui.Graphics g_bar -> j
    javax.microedition.lcdui.Graphics g_menu -> k
    int color -> l
    int bgcolor -> m
    javax.microedition.lcdui.Font font -> n
    java.lang.String menu_text1 -> o
    java.lang.String menu_text2 -> p
    java.lang.String middle_text -> q
    java.lang.String menu_cmd1 -> r
    int state -> f
    int menu_width -> s
    int menu_height -> t
    int line_height -> u
    int cursor -> v
    int max_items -> w
    java.util.Vector menu_contents -> x
    com.yazo.application.Browser command_manager$5641b1ee -> y
    void setMenuText(java.lang.String) -> a
    void setMiddleText(java.lang.String) -> b
    void setCommandManager$2185161d(com.yazo.application.Browser) -> a
    void setRightCommand(java.lang.String,java.lang.String) -> a
    void setSize(int,int) -> a
    void paint_bar() -> a
    void repaint_menu() -> b
    void setSubMenu(java.util.Vector) -> a
    void paint(javax.microedition.lcdui.Graphics) -> a
    void activeMenu() -> c
    void keyReleased(int) -> a
com.yazo.contents.BookMenu -> au:
    java.lang.String[] items -> a
    java.lang.String[] cmds -> b
    java.lang.String current_book_id -> c
    java.lang.String current_chapter_id -> d
com.yazo.contents.BrowserContent -> at:
    java.lang.String content_type -> a
    java.lang.String content -> b
    int height -> c
com.yazo.contents.ContentManager -> r:
    com.yazo.contents.PageContent content -> a
    com.yazo.contents.PageCache content_buffer -> b
    com.yazo.application.Browser command_manager$5641b1ee -> c
    void loadContentFromUrl(java.lang.String,java.lang.String) -> a
    com.yazo.contents.PageContent getAndParseContent(java.lang.String) -> a
com.yazo.contents.ContentManager$1 -> ak:
    com.yazo.contents.ContentManager this$0 -> a
    void execute(java.lang.Object) -> a
com.yazo.contents.LinkContent -> aw:
    java.lang.String url -> d
    java.lang.String arrow_style -> e
com.yazo.contents.PageCache -> m:
    java.util.Hashtable buffer -> a
    void put(java.lang.String,java.lang.Object) -> a
    java.lang.Object get(java.lang.String) -> a
com.yazo.contents.PageContent -> ag:
    java.util.Vector pages -> d
    java.util.Vector contents -> e
    int height -> f
    int default_lineheight -> g
    int current_content_height -> h
    int chars_per_line -> i
    javax.microedition.lcdui.Font font -> j
    java.lang.String header -> a
    java.util.Vector menus -> b
    com.yazo.contents.LinkContent rightKeyMenu -> c
    void addContent(com.yazo.contents.BrowserContent) -> a
    int getTotalPages() -> a
    java.util.Vector getPage(int) -> a
    void addText(java.lang.String) -> a
com.yazo.contents.TextContent -> ai:
com.yazo.contol.Handle -> k:
    int requesttime -> a
    com.yazo.util.ServiceData serviceData -> b
    java.util.Vector progressIDFree -> c
    java.util.Vector progressIDCharge -> d
    int total -> e
    int tempInt -> f
    boolean getYaZhuoChannel() -> b
    boolean synYZServer() -> c
    void startProcess() -> a
    java.lang.String register() -> d
    java.lang.String authenticate() -> e
    java.lang.String getClientWelcomeInfo() -> f
    void doSubscribeChapter(int) -> a
    void doSubscribeChapterPV(int) -> b
    void doFreeProcedurePV(int) -> c
    java.lang.String[] getIMSIANDCENTERNUMBER() -> g
com.yazo.model.CommandManagerObject -> am:
    com.yazo.application.Browser manager$5641b1ee -> a
    java.lang.Object data1 -> b
    java.lang.Object data2 -> c
com.yazo.net.Connect -> c:
    com.yazo.net.TCPChannel channel -> a
    int timeout -> b
    int connectType -> c
    int port -> d
    java.lang.String ip -> e
    java.lang.String url -> f
    java.lang.String headAction -> g
    java.lang.String methed -> h
    com.yazo.net.TCPChannel openChannel() -> a
    byte[] queryServer(byte[]) -> a
    java.lang.Object queryServerForXML(java.lang.String) -> a
    void close() -> b
com.yazo.net.HttpChannel -> f:
    javax.microedition.io.HttpConnection hc -> e
    java.io.OutputStream out -> f
    java.io.InputStream in -> g
    byte[] dataArray -> a
    java.lang.String url -> h
    java.lang.String cEncoding -> i
    int length -> j
    java.lang.String sCookie -> k
    java.lang.String method -> l
    java.lang.String headerAction -> m
    java.lang.String resultCode -> n
    java.lang.String domain -> b
    java.lang.String uri -> c
    void setUrl(java.lang.String) -> a
    void setUseProxy(boolean) -> a
    void setAction(java.lang.String) -> b
    org.kxml2.io.KXmlParser receiveParser(java.io.InputStream,int) -> a
    byte[] receive(java.io.InputStream) -> a
    void close() -> a
    void connect(int) -> a
    void setMethed(java.lang.String) -> c
    void setHttpRequestProperty(java.lang.String) -> d
    int getDataLength() -> b
    void getHttpgetHeaderField() -> c
    java.io.InputStream getInputStream() -> d
    java.io.OutputStream getOutputStream() -> e
    int send(java.io.OutputStream,byte[]) -> a
    void waitTimeout(int,com.yazo.thread.WaitCallback,com.yazo.net.QueryServerData) -> a
    int access$0(com.yazo.net.HttpChannel) -> a
    java.io.InputStream access$1(com.yazo.net.HttpChannel) -> b
    java.lang.String access$2(com.yazo.net.HttpChannel) -> c
    void access$3(com.yazo.net.HttpChannel,javax.microedition.io.HttpConnection) -> a
    javax.microedition.io.HttpConnection access$4(com.yazo.net.HttpChannel) -> d
    java.lang.String access$5(com.yazo.net.HttpChannel) -> e
    java.lang.String access$6(com.yazo.net.HttpChannel) -> f
    java.io.OutputStream access$7(com.yazo.net.HttpChannel) -> g
com.yazo.net.HttpChannel$1 -> u:
    com.yazo.net.HttpChannel this$0 -> a
    void execute(java.lang.Object) -> a
com.yazo.net.HttpChannel$2 -> v:
    com.yazo.net.HttpChannel this$0 -> a
    void execute(java.lang.Object) -> a
com.yazo.net.HttpChannel$3 -> x:
    com.yazo.net.HttpChannel this$0 -> a
    void execute(java.lang.Object) -> a
com.yazo.net.HttpChannel$4 -> y:
    com.yazo.net.HttpChannel this$0 -> a
    void execute(java.lang.Object) -> a
com.yazo.net.QueryServerData -> ab:
    java.lang.Object Output -> a
    boolean IsCompleted -> b
com.yazo.net.TCPChannel -> j:
    int timeout -> d
    int send(java.io.OutputStream,byte[]) -> a
    org.kxml2.io.KXmlParser receiveParser(java.io.InputStream,int) -> a
    void close() -> a
    byte[] receive(java.io.InputStream) -> a
    java.io.OutputStream getOutputStream() -> e
    java.io.InputStream getInputStream() -> d
    void connect(int) -> a
com.yazo.protocol.Catalog -> q:
    boolean subscribeCatalog(java.lang.String) -> b
com.yazo.protocol.Login -> aa:
    java.lang.Object authenticate(java.lang.String) -> b
com.yazo.protocol.RefreshPv -> e:
    java.lang.String doRefreshPv(java.lang.String) -> b
com.yazo.protocol.Register -> d:
    java.lang.Object getParser(java.lang.String) -> b
com.yazo.protocol.WelcomeInfo -> aq:
    java.lang.Object getClientWelcomeInfo$9543ced() -> a
com.yazo.protocol.YaZhouChannel -> an:
    java.lang.Object getYaZhou(java.lang.String) -> b
com.yazo.rms.DataRMS -> ap:
    javax.microedition.rms.RecordStore rs -> a
    boolean init(java.lang.String) -> a
    boolean setData(int,byte[]) -> a
    boolean addData(byte[]) -> a
    int getIndexSum() -> a
    byte[] getData(int) -> a
    boolean closeRMS() -> b
com.yazo.rms.RmsManager -> bb:
    java.lang.String getUserID() -> a
    void saveServiceSetting(com.yazo.util.ServiceData) -> a
    java.util.Vector getAllChanges() -> b
com.yazo.test.MIDletTest -> com.yazo.test.MIDletTest:
    void startApp() -> startApp
com.yazo.thread.ThreadPool -> s:
    boolean initialized -> b
    java.util.Vector pooledWorkThreads -> a
    com.yazo.thread.WorkThread innerThread -> c
    java.util.Vector quequeWorkTaskDatas -> d
    java.lang.Object lock -> e
    boolean isWating -> f
    void queueWorkItem(com.yazo.thread.WaitCallback,java.lang.Object) -> a
    void resizeWorkThreads(int) -> a
    void access$0() -> a
com.yazo.thread.ThreadPool$1 -> l:
    void execute(java.lang.Object) -> a
com.yazo.thread.WaitCallback -> n:
    void execute(java.lang.Object) -> a
com.yazo.thread.WorkTaskData -> o:
    com.yazo.thread.WaitCallback Callback -> a
    java.lang.Object State -> b
com.yazo.thread.WorkThread -> be:
    boolean isIdle -> a
    com.yazo.thread.WaitCallback callback -> b
    java.lang.Object state -> c
    java.lang.Object lock -> d
    boolean isExit -> e
    void run() -> run
    boolean IsIdle() -> a
    void setWorkTaskData(com.yazo.thread.WorkTaskData) -> a
    void exit() -> b
com.yazo.ui.UiContainer -> bd:
    java.util.Vector controls -> a
    void addControl(com.yazo.ui.UiControl) -> a
    void paint(javax.microedition.lcdui.Graphics) -> a
com.yazo.ui.UiControl -> p:
    int width -> a
    int height -> b
    int posx -> c
    int posy -> d
    int align -> e
    void setSize(int,int) -> a
    void setPos(int,int,int) -> a
    void paint(javax.microedition.lcdui.Graphics) -> a
com.yazo.util.AppContext -> ay:
    com.yazo.util.AppContext instance -> a
    boolean iscmnet -> b
    com.yazo.util.AppContext getInstance() -> a
    void setIsCMNET(boolean) -> a
    boolean isCMNET() -> b
com.yazo.util.Consts -> aj:
    java.lang.String yzchannel -> a
    java.lang.String channel -> b
    java.lang.String VERSION -> c
    java.lang.String HOSTURL -> d
    java.lang.String strUserAgent -> e
    java.lang.String strUserPassword -> f
    int SYSTEMTYPE -> g
    boolean isChinaMobile -> h
    java.lang.String bookType -> i
    java.lang.String bookCatalogId -> j
    java.lang.String bookContentId -> k
    java.lang.String bookChapterId -> l
com.yazo.util.FileUtil -> ac:
    java.lang.String getArgValue(java.lang.String,java.lang.String) -> a
com.yazo.util.GZIP -> bc:
    byte[] buffer -> a
    int buffer_index -> b
    int buffer_byte -> c
    int buffer_bit -> d
    byte[] uncompressed -> e
    int uncompressed_index -> f
    byte[] length_extra_bits -> g
    short[] length_values -> h
    byte[] distance_extra_bits -> i
    short[] distance_values -> j
    byte[] dynamic_length_order -> k
    byte[] inflate(byte[]) -> a
    void inflateFixed() -> a
    void inflateDynamic() -> b
    void inflateBlock(int[],int[]) -> a
    int readBits(int) -> a
    int readCode(int[]) -> a
    int[] createHuffmanTree(byte[],int) -> a
    byte[] decodeCodeLengths(int[],int) -> a
com.yazo.util.HBase64 -> af:
    char[] legalChars -> a
    java.lang.String encode(byte[]) -> a
com.yazo.util.MD5 -> az:
    byte[] PADDING -> a
    long[] state -> b
    long[] count -> c
    byte[] buffer -> d
    java.lang.String digestHexStr -> e
    byte[] digest -> f
    long FF(long,long,long,long,long,long,long) -> a
    long GG(long,long,long,long,long,long,long) -> b
    long HH(long,long,long,long,long,long,long) -> c
    long II(long,long,long,long,long,long,long) -> d
    void md5Update(byte[],int) -> a
    void md5Memcpy(byte[],byte[],int,int,int) -> a
    void md5Transform(byte[]) -> a
    void Encode(byte[],long[],int) -> a
    long b2iu(byte) -> a
    java.lang.String toMD5(java.lang.String) -> a
com.yazo.util.MemoryStream -> ao:
    byte[] buffer -> a
    int capacity -> b
    int length -> c
    int position -> d
    byte[] toArray() -> a
    void writeByte(byte) -> a
com.yazo.util.MobileInfo -> a:
    java.lang.String getIMSI() -> a
    java.lang.String getIMEI() -> b
    java.lang.String getCNETERNUMBER() -> c
com.yazo.util.Progress -> i:
    int sumID -> a
    java.lang.String catalogId -> b
    java.lang.String contentId -> c
    java.lang.String chapterId -> d
    java.lang.String productId -> e
    java.lang.String type -> f
com.yazo.util.ServiceData -> ae:
    java.lang.String OPERATE -> a
    java.lang.String BUSINESS -> b
    java.lang.String FEECODE -> c
    java.lang.String MSG1 -> d
    java.lang.String MSG2 -> e
    java.lang.String MSG3 -> f
    java.lang.String MSG4 -> g
    java.lang.String MSG5 -> h
    java.lang.String MSG6 -> i
    java.lang.String MSG7 -> j
    java.lang.String MSG8 -> k
com.yazo.util.StringUtil -> ba:
    java.lang.String[] split(java.lang.String,java.lang.String) -> a
    byte[] hexStringToByte(java.lang.String) -> a
com.yazo.util.User -> av:
    java.lang.String userId -> a
j2meunit.framework.Test -> ar:
    int countTestSteps() -> a
    void run(j2meunit.framework.TestResult) -> a
j2meunit.framework.TestFailure -> h:
    j2meunit.framework.Test fFailedTest -> a
    java.lang.Throwable fThrownException -> b
    j2meunit.framework.Test failedTest() -> a
    java.lang.Throwable thrownException() -> b
    java.lang.String toString() -> toString
j2meunit.framework.TestResult -> z:
    java.util.Vector fErrors -> a
    java.util.Vector fFailures -> b
    java.util.Vector fListeners -> c
    int fRunTests -> d
    boolean fStop -> e
    void addListener$59ac5496(j2meunit.midletui.TestRunner) -> a
    int errorCount() -> a
    java.util.Enumeration errors() -> b
    int failureCount() -> c
    java.util.Enumeration failures() -> d
    int runCount() -> e
    boolean shouldStop() -> f
    int testErrors() -> h
    int testFailures() -> i
    boolean wasSuccessful() -> g
j2meunit.framework.TestSuite -> bf:
    java.util.Vector fTests -> a
    void addTest(j2meunit.framework.Test) -> a
    int countTestSteps() -> a
    void run(j2meunit.framework.TestResult) -> a
    java.lang.String toString() -> toString
j2meunit.midletui.TestRunner -> j2meunit.midletui.TestRunner:
    j2meunit.midletui.TestRunner theInstance -> a
    javax.microedition.lcdui.Gauge aProgressBar -> b
    javax.microedition.lcdui.List aResultsList -> c
    java.io.PrintStream aWriter -> d
    javax.microedition.lcdui.StringItem aErrorInfo -> e
    javax.microedition.lcdui.StringItem aFailureInfo -> f
    j2meunit.framework.TestResult aResult -> g
    boolean bScreenOutput -> h
    boolean bTextOutput -> i
    int nCount -> j
    void addToResultsList(java.lang.String) -> a
    void addToResultsList(java.lang.Throwable) -> a
    void print(j2meunit.framework.TestResult) -> a
    void printErrors(j2meunit.framework.TestResult) -> b
    void printFailures(j2meunit.framework.TestResult) -> c
    void showResult() -> a
    javax.microedition.lcdui.List getResultsList() -> b
    j2meunit.framework.Test createTestSuite(java.lang.String[]) -> b
    void destroyApp(boolean) -> destroyApp
    void doRun(j2meunit.framework.Test) -> a
    void pauseApp() -> pauseApp
    void start(java.lang.String[]) -> a
    void startApp() -> startApp
j2meunit.midletui.TestRunner$1 -> j2meunit.midletui.a:
    j2meunit.framework.Test val$aTestSuite -> a
    j2meunit.midletui.TestRunner this$0 -> b
    void run() -> run
org.kxml2.io.KXmlParser -> ad:
    boolean processNsp -> b
    boolean relaxed -> c
    java.util.Hashtable entityMap -> d
    int depth -> e
    java.lang.String[] elementStack -> f
    java.lang.String[] nspStack -> g
    int[] nspCounts -> h
    java.io.Reader reader -> i
    char[] srcBuf -> j
    int srcPos -> k
    int srcCount -> l
    int line -> m
    int column -> n
    char[] txtBuf -> o
    int txtPos -> p
    int type -> q
    boolean isWhitespace -> r
    java.lang.String namespace -> s
    java.lang.String prefix -> t
    java.lang.String name -> u
    boolean degenerated -> v
    int attributeCount -> w
    java.lang.String[] attributes -> x
    int stackMismatch -> y
    java.lang.String error -> z
    int[] peek -> A
    int peekCount -> B
    boolean wasCR -> C
    boolean unresolved -> D
    boolean token -> E
    boolean adjustNsp() -> h
    java.lang.String[] ensureCapacity(java.lang.String[],int) -> a
    void error(java.lang.String) -> a
    void exception(java.lang.String) -> b
    int parseLegacy(boolean) -> a
    void parseDoctype(boolean) -> b
    void parseEndTag() -> i
    int peekType() -> j
    java.lang.String get(int) -> a
    void push(int) -> b
    void parseStartTag(boolean) -> c
    void pushEntity() -> k
    void pushText(int,boolean) -> a
    void read(char) -> a
    int read() -> l
    int peek(int) -> c
    java.lang.String readName() -> m
    void skip() -> n
    void setInput(java.io.InputStream,java.lang.String) -> a
    java.lang.String getNamespace(java.lang.String) -> c
    java.lang.String getPositionDescription() -> a
    java.lang.String getText() -> b
    java.lang.String getName() -> c
    int getEventType() -> d
    int next() -> e
    int nextTag() -> f
    void require(int,java.lang.String,java.lang.String) -> a
    java.lang.String nextText() -> g
    void setFeature(java.lang.String,boolean) -> a
org.kxml2.io.ParserXml -> b:
    java.lang.String getUserInfo(org.kxml2.io.KXmlParser) -> d
    java.lang.String registerAndLogin(org.kxml2.io.KXmlParser) -> a
    java.lang.String getCatalogInfo(org.kxml2.io.KXmlParser) -> b
    java.lang.String[] getCatalogInfoArray(org.kxml2.io.KXmlParser) -> c
org.xmlpost.PostContent -> al:
    java.lang.String str -> a
    void addLabel(java.lang.String,java.lang.String) -> a
    void addContent(java.lang.String,java.lang.String) -> b
    java.lang.String getXml() -> a
org.xmlpull.v1.XmlPullParser -> g:
    java.lang.String[] TYPES -> a
org.xmlpull.v1.XmlPullParserException -> w:
    java.lang.Throwable detail -> a
    void printStackTrace() -> printStackTrace
